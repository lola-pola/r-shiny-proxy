name: r-shiny-proxy
"on":
    push:
        branches:
            - main
    workflow_dispatch: {}
env:
    ACR_RESOURCE_GROUP: teva-private-demo
    AZURE_CONTAINER_REGISTRY: tevaprivatedemo
    CHART_OVERRIDE_PATH: ./r-shiny-proxy/values.yaml
    CHART_OVERRIDES: ""
    CHART_PATH: ./r-shiny-proxy
    CLUSTER_NAME: r-shiny-proxy-automation-demo
    CLUSTER_RESOURCE_GROUP: teva-private-demo
    CONTAINER_NAME: shinyproxy-application
    CONTAINER_NAME_SIDE: kube-proxy-sidecar

jobs:
    buildImage:
        permissions:
            contents: read
            id-token: write
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: azure/login@v1.4.3
              name: Azure login
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            - name: Build and push image to ACR
              run: cd shinyproxy-application && az acr build --image ${{ env.CONTAINER_NAME }}:${{ github.sha }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.ACR_RESOURCE_GROUP }} -f ./Dockerfile . 
            - name: Build and push image to ACR
              run: cd kube-proxy-sidecar && az acr build --image ${{ env.CONTAINER_NAME_SIDE }}:${{ github.sha }} --registry ${{ env.AZURE_CONTAINER_REGISTRY }} -g ${{ env.ACR_RESOURCE_GROUP }} -f ./Dockerfile .
    deploy:
        permissions:
            actions: read
            contents: read
            id-token: write
        runs-on: ubuntu-latest
        needs:
            - buildImage
        steps:
            - uses: actions/checkout@v3
            - uses: azure/login@v1.4.3
              name: Azure login
              with:
                client-id: ${{ secrets.AZURE_CLIENT_ID }}
                subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            - uses: azure/aks-set-context@v3
              name: Get K8s context
              with:
                cluster-name: ${{ env.CLUSTER_NAME }}
                resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
            - name: Deploy application
              run: helm upgrade --wait -i -f ${{ env.CHART_OVERRIDE_PATH }}  automated-deployment ${{ env.CHART_PATH }}
